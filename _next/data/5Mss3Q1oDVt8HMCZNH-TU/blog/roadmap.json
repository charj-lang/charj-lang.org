{"pageProps":{"post":{"title":"Charj Lang Roadmap","date":"2020-12-16T01:37:21.950Z","slug":"roadmap","content":"\n# Charj Roadmap\n\n![Charj Process](https://charj-lang.github.io/arts/charj-process.svg)\n\n- 1.0：抽象出 Charj Lang\n     - 快速的多语言 parser（当前，基于 textmate 高亮语法的  Scie 实现）\n     - 设计 HIR 作为 Tier  1 级别语言的 IR\n     - 使用 Movable 转换 a 步骤生成的 Token\n     - 通过往复抽象，提炼出 Charj Lang\n     - Charj Lang 前端实现\n- 2.0：实现完整的语言转换\n     - 使用 Typography 作为语法解析器\n     - 设计 MIR 作为 Tier 2 级别语言的 IR\n     - 完整 Charj Lang 编译器实现与优化\n3.0 自举\n     - 使用 Typography 实现 Charj 语法解析\n     - 使用 Typography 实现 Typography 语法解析\n     - 使用 Charj 编写 Charj\n\n## Typography 语法解析器\n\n支持继承 + AST 模型生成：参考  Antlr +  Fall\n\nGitHub：[https://github.com/charj-lang/movable](https://github.com/charj-lang/movable)\n\n原型：\n\n```\n// default tokenizer for extends\ndefine default$tokenizer {\n  identifier: [a-zA-Z_];\n}\n// define tokenizer rules\ntokenizer extends default$tokenizer {\n   ...\n}\n// define rule\nrule <ruleName> {\n\t...\n}\n\n\n// ast for generate code\nast {\n  node parameters {\n\tparameters parameter*;\n  }\n}\n```\n\n\n## \n\n\n"}},"__N_SSG":true}